import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/repo' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.14.0'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/repo' }
}


android {
    compileSdkVersion 21
    buildToolsVersion "21.1.0"

    defaultConfig {
        applicationId "com.snilius.mysl"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 13
        versionName "0.5.0" // remember to bump ga version too
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            applicationVariants.all { variant ->
                def file = variant.outputFile
                if (variant.buildType.name == "release") {
                    variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + "_" + defaultConfig.versionCode + "_${buildTime()}.apk"))
                }
            }
        }

        debug {
            minifyEnabled false
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:21.0.0'
    compile "com.android.support:appcompat-v7:21.0.+"
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.koushikdutta.ion:ion:1.3.7'
    compile 'com.github.gabrielemariotti.cards:library:1.8.+'
    compile 'com.google.android.gms:play-services:6.1.71'
    compile 'com.jakewharton.timber:timber:2.4.+'

    compile('com.crashlytics.sdk.android:crashlytics:2.0.1@aar') {
        transitive = true;
    }
}

def props = new Properties()

// Fetch properties for signing
def propFile = new File('release.properties')
if (propFile.canRead()){
    props.load(new FileInputStream(propFile))

    android.signingConfigs.release.storeFile file(props.keyStore)
    android.signingConfigs.release.storePassword props.keyStorePassword
    android.signingConfigs.release.keyAlias props.keyAlias
    android.signingConfigs.release.keyPassword props.keyAliasPassword
} else {
    println 'release.properties not found'
    android.buildTypes.release.signingConfig = null
}

def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}